# THIS IS NOT TO BE USED FOR PERSONAL DEPLOYMENTS!
# Internal Docker Compose Image used for internal testing deployments

services:
  hoppscotch-db:
    image: postgres:15
    container_name: hoppscotch-postgres-db
    environment:
      POSTGRES_USER: ktq-hoppscotch
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: hoppscotch
    ports:
      - 3003:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - hoppscotch-db_pgdata:/var/lib/postgresql/data
    networks:
      - hoppscotch-network

  hoppscotch-aio:
    container_name: hoppscotch-aio
    build:
      dockerfile: prod.Dockerfile
      context: .
      target: aio
    environment:
      # DATABASE_URL is read from the .env file to allow the backend to connect with an external database.
      # This allows the backend to retain existing data and prevents database resets during deployments.
      - DATABASE_URL=postgresql://ktq-hoppscotch:${POSTGRES_PASSWORD}@hoppscotch-postgres-db:5432/hoppscotch
      - ENABLE_SUBPATH_BASED_ACCESS=true
    env_file:
      - ./.env
    depends_on:
      hoppscotch-db:
        condition: service_healthy
    command:
      [
        "sh",
        "-c",
        "pnpm exec prisma migrate deploy && node /usr/src/app/aio_run.mjs",
      ]
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "-s",
          "-o",
          "/dev/null",
          "-w",
          "%{http_code}",
          "http://localhost:80",
        ]
      interval: 2s
      timeout: 10s
      retries: 30
    ports:
      - "3000:80"
      - "3001:3100"
      - "3002:3170"
    networks:
      - hoppscotch-network

volumes:
  hoppscotch-db_pgdata:

networks:
  hoppscotch-network:
    driver: bridge
